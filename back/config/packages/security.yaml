security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            provider: app_user_provider
            user_checker: App\Security\UserChecker
            pattern: ^/v1/login$   # Remplace /api/login par /v1/login
            stateless: true
            json_login:
                check_path: v1_login  # Remplace api_login par v1_login si la route a été renommée
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern: ^/v1  # Remplace /api par /v1 pour les routes protégées
            stateless: true
            provider: app_user_provider
            jwt: ~

    access_control:
        - { path: ^/_profiler, roles: PUBLIC_ACCESS }
        - { path: ^/_wdt, roles: PUBLIC_ACCESS }
        - { path: ^/v1/test, roles: PUBLIC_ACCESS }
        - { path: ^/v1/login, roles: PUBLIC_ACCESS }
        - { path: ^/v1/public, roles: PUBLIC_ACCESS }
        - { path: ^/v1/forgot-password, roles: PUBLIC_ACCESS }  # Remplacer les chemins par /v1
        - { path: ^/v1/verif-password-token, roles: PUBLIC_ACCESS }
        - { path: ^/v1/reset-password, roles: PUBLIC_ACCESS }
        - { path: ^/v1, roles: IS_AUTHENTICATED_FULLY }

    role_hierarchy:
        ROLE_SUPER_ADMIN: [ ROLE_USER , ROLE_ALLOWED_TO_SWITCH ]