<%
if (s.forceSsl) {
%>
    server {

        listen       80;

        server_name  <%-s.publicDomain%>;

        # Used by Lets Encrypt
        location /.well-known/acme-challenge/ {
            root <%-s.staticWebRoot%>;
        }

        # Used by CapRover for health check
        location /.well-known/captain-identifier {
            root <%-s.staticWebRoot%>;
        }

        location / {
            return 302 https://$http_host$request_uri;
        }
    }
<%
}
%>

server {

    <%
    if (!s.forceSsl) {
    %>
        listen       80;
    <%
    }
    if (s.hasSsl) {
    %>
        listen              443 ssl http2;
        ssl_certificate     <%-s.crtPath%>;
        ssl_certificate_key <%-s.keyPath%>;
    <%
    }
    %>

    client_max_body_size 500m;

    server_name  <%-s.publicDomain%>;

    # 127.0.0.11 is DNS set up by Docker, see:
    # https://docs.docker.com/engine/userguide/networking/configure-dns/
    # https://github.com/moby/moby/issues/20026
    resolver 127.0.0.11 valid=10s;

    # IMPORTANT!! If you are here from an old thread to set a custom port, you do not need to modify this port manually here!!
    # Simply change the Container HTTP Port from the dashboard HTTP panel
    set $upstream http://<%-s.localDomain%>:<%-s.containerHttpPort%>;

    # Proxy Nuxt.js
    location / {
        proxy_pass http://srv-captain--c4dev-nuxt:3000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Chemin statique pour _nuxt
    location /_nuxt/ {
        proxy_pass http://srv-captain--c4dev-nuxt:3000/_nuxt/;
        expires max;
        log_not_found off;
    }

    # Gestion des médias générés (LiipImagineBundle)
    location /media/cache/ {
        alias /var/www/symfony/public/media/cache/;
        try_files $uri /index.php$is_args$args;
    }

    # Gestion des fichiers téléchargés
    location /uploads/ {
        alias /var/www/symfony/public/uploads/;
        try_files $uri /index.php$is_args$args;
    }

    # Requêtes API via Symfony
    location /v1/ {
        root /var/www/symfony/public;
        try_files $uri /index.php$is_args$args;
    }

    # Gestion des fichiers dynamiques PHP
    location ~ ^/index\.php(/|$) {
        root /var/www/symfony/public;
        fastcgi_pass srv-captain--c4dev-php:9001; # Utilise le conteneur PHP
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param HTTPS $https if_not_empty;
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
    }

    # Used by Lets Encrypt
    location /.well-known/acme-challenge/ {
        root <%-s.staticWebRoot%>;
    }

    # Used by CapRover for health check
    location /.well-known/captain-identifier {
        root <%-s.staticWebRoot%>;
    }

    error_page 502 /captain_502_custom_error_page.html;
    location = /captain_502_custom_error_page.html {
        root <%-s.customErrorPagesDirectory%>;
        internal;
    }

# Activer les logs d'accès
access_log /var/log/nginx/c4dev_access.log;

# Activer les logs d'erreur
error_log /var/log/nginx/c4dev_error.log debug;
}